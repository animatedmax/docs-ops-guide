---
title: Isolating a Pivotal Cloud Foundry&reg; Deployment with a Private Network
---






## <a href='./nested-index.html'>Hi i'm a link to a nested index! </a>


## <a href='./not-a-nested-index.html'>Hi i'm a link to just some other thing! </a>







<strong><%= modified_date %></strong>

You may want to place your [Pivotal Cloud Foundry&reg;](https://network.pivotal.io/products/pivotal-cf) (PCF) deployment on a private network, then route requests to PCF from a router or a load balancer on a public network.
Isolating PCF in this way increases security and allows you to use as many IP
addresses as you need by creating subnets in the private network.

One way to accomplish this is to configure Network Address Translation (NAT) on
a VM.
The following example explains how to set up a virtual CentOS NAT box in
vSphere, and use that to isolate a PCF deployment.

## <a id='deploy_centos'></a>Step 1: Deploy a CentOS image to vSphere ##

Connect to vCenter using the vSphere client.
Assign two network adapters to the VM.
This results in the VM having two IP addresses:

- A public-facing IP address: This IP address connects to the public network VLAN (WAN) through `GATEWAY_EXTERNAL_IP`.

- An internal VLAN IP address to communicate with other BOSH/Cloud Foundry components: This IP address connects to the private network (LAN) for the Ops Manager deployment using `GATEWAY_INTERNAL_IP`.

1. Download the latest CentOS image from [http://wiki.centos.org/Download](http://wiki.centos.org/Download).

1. In vSphere, select **File > New > Virtual Machine**.

1. On the **Configuration** page, select the **Typical** configuration and click **Next**.

    <%= image_tag("typ-config.png") %>

1. On the **Name and Location** page, name the virtual machine and click **Next**.

1. On the **Resource Pool** page, select a resource pool and click **Next**.

1. On the **Storage** page, select a destination storage for the VM and click **Next**.

1. On the **Guest Operating System** page, select **Linux** as the Guest Operating System and **CentOS 4/5/6 (64-bit)** as the version, then click **Next**.

    <%= image_tag("guestos.png") %>

1. On the **Network** page, select **2** from the drop down menu to specify how many NICs you want to connect. Under **Network**, select **VM Network** for NIC 1 and the name of your private network for NIC 2. Then, click **Next**.

    <%= image_tag("nics.png") %>

1. On the **Create a Disk** page, click **Next**.

1. On the **Ready to Complete** page, check the **Edit the virtual machine settings before completion** checkbox, then click **Continue**.

1. Under **Hardware**, select **New CD/DVD**, then select **Datastore ISO File** and click **Browse**. Browse to **ISO > CentOS-6.5-x86_64-minimal.iso** in your datastore.

    <%= image_tag("newcd.png") %>

1. Under **Device Status**, check the **Connect at power on** checkbox.

1. Under **Hardware**, select **New NIC (adding) -- VM Network**.

    <%= image_tag("edit-vm.png") %>

1. Under **MAC Address**, select **Manual** and specify the MAC address, then click **Finish**.

## <a id='iptables'></a>Step 2: Set up iptables ##

1. Log in to the CentOS VM as root.

1. Run the following script to set up iptables, replacing the example IPs as appropriate.

<pre>
	# the following is an example proxy configuration
	sudo vi /etc/sysctl.conf
	set net.ipv4.ip_forward=1

	# reset
	iptables --flush

	# example IPs--replace as appropriate
	export INTERNAL_NETWORK_RANGE=10.0.0.0/8
	export GATEWAY_INTERNAL_IP=10.0.0.1
	export GATEWAY_EXTERNAL_IP=88.198.185.190
	export PIVOTALCF_IP=10.0.0.10
	export HA_PROXY_IP=10.0.0.13

	# iptables forwarding rules including loopback
	iptables -A FORWARD -i eth1 -j ACCEPT
	iptables -A FORWARD -o eth1 -j ACCEPT
	iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
	iptables -t nat -A POSTROUTING -d $HA_PROXY_IP -s $INTERNAL_NETWORK_RANGE \
		-p tcp --dport 80 -j SNAT --to $GATEWAY_INTERNAL_IP

		iptables -t nat -A POSTROUTING -d $HA_PROXY_IP -s $INTERNAL_NETWORK_RANGE \
		        -p tcp --dport 443 -j SNAT --to $GATEWAY_INTERNAL_IP

		iptables -t nat -A PREROUTING -d $GATEWAY_EXTERNAL_IP -p tcp --dport 443 -j DNAT \
		         --to $HA_PROXY_IP
		iptables -t nat -A PREROUTING -d $GATEWAY_EXTERNAL_IP -p tcp --dport 80 -j DNAT \
		         --to $HA_PROXY_IP

		iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 8443 -j DNAT \
		      --to $PIVOTALCF_IP:443
		iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j DNAT \
		      --to $HA_PROXY_IP:80
		iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 22 -j DNAT \
		      --to $PIVOTALCF_IP:22
		iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 8080 -j DNAT \
		      --to $PIVOTALCF_IP:80

		# DNS iptables rules
		iptables -A INPUT -p udp --sport 53 -j ACCEPT
		iptables -A INPUT -p udp --dport 53 -j ACCEPT
		iptables -A OUTPUT -p udp --sport 53 -j ACCEPT
		iptables -A OUTPUT -p udp --dport 53 -j ACCEPT
		iptables -A INPUT -p udp -j DROP
		iptables -A OUTPUT -p udp -j DROP

	service iptables save
	shutdown -r now

</pre>
## <a id='deploy_cf'></a> Step 3: Deploy the Ops Manager VM Template ##

1. Download PCF from the Pivotal Network at
[https://network.pivotal.io/products/pivotal-cf](https://network.pivotal.io/products/pivotal-cf).

2. Unzip the downloaded file.

3. Deploy the Ops Manager VM template in the private network using the internal
IP address.
For more information, see the [Getting Started Guide](../getstarted/index.html).
Access the deployed VM at port 8443 using `https://GATEWAY_EXTERNAL_IP:8443`.
